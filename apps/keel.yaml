---
apiVersion: apps/v1
kind: Deployment
metadata:
 name: keel
 labels:
   app: keel
 annotations:
   keel.sh/policy: force
   keel.sh/trigger: poll
   keel.sh/approvals: "1"
spec:
 replicas: 1
 selector:
    matchLabels:
      app: keel
 template:
   metadata:
     labels:
       app: keel
   spec:
    containers:
       - name: keel
         image: keelhq/keel:latest
         imagePullPolicy: Always
         ports:
           - containerPort: 9300
         env:
          # Basic auth (to enable UI/API)
          - name: BASIC_AUTH_USER
            value: admin
          - name: BASIC_AUTH_PASSWORD
            value: admin
          - name: AUTHENTICATED_WEBHOOKS
            value: "false"
          - name: NOTIFICATION_LEVEL
            value: "info"
          # Enable insecure registries
          - name: INSECURE_REGISTRY
            value: "true"
---
kind: Service
apiVersion: v1
metadata:
  name: keel-service
spec:
  selector:
    app: keel
  ports:
  - protocol: TCP
    port: 9300
    targetPort: 9300
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: keel-ingress
spec:
  rules:
  - host: keel.int.sambaum.ch
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: keel-service
            port:
              number: 9300






---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keel
  namespace: "default"
  labels:
    app: keel
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: keel
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - watch
      - list
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - ""
      - extensions
      - apps
      - batch
    resources:
      - pods
      - replicasets
      - replicationcontrollers
      - statefulsets
      - deployments
      - daemonsets
      - jobs
      - cronjobs
    verbs:
      - get
      - delete # required to delete pods during force upgrade of the same tag
      - watch
      - list
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods/portforward
    verbs:
      - get
      - create
      - update


---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: keel
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: keel
subjects:
  - kind: ServiceAccount
    name: keel
    namespace: "default"
---